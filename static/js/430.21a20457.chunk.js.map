{"version":3,"file":"static/js/430.21a20457.chunk.js","mappings":"kTAIAA,EAAAA,EAAAA,SAAAA,QAAA,+BACAA,EAAAA,EAAAA,SAAAA,OAAwB,CAAC,EACzBA,EAAAA,EAAAA,SAAAA,OAAAA,QAJgB,mCAKhBA,EAAAA,EAAAA,SAAAA,OAAAA,SAAoC,QAE7B,IAAMC,EAAgB,mCAAG,sGACPD,EAAAA,EAAAA,IAAA,sBAAiC,CACtDE,OAAQ,CAAEC,KAAM,KAFY,uBACtBC,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAc,mCAAG,WAAMC,GAAN,yFACLN,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CAAEI,MAAAA,EAAOC,eAAe,EAAOJ,KAAM,KAFnB,uBACpBC,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdI,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,IADZ,uBACvBL,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAUjBM,EAAS,mCAAG,WAAMD,GAAN,yFACAT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aADA,uBACfL,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTO,EAAW,mCAAG,WAAMF,GAAN,yFACFT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAkC,CACvDP,OAAQ,CAAEC,KAAM,KAFO,uBACjBC,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD,uJCpCXQ,GAAeC,E,QAAAA,IAAO,IAAPA,CAAH,mF,SCwCzB,EArCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEST,EAAAA,EAAAA,IAAYU,OAAOP,IAF5B,gBAETQ,EAFS,EAETA,QACRJ,EAAWI,GAHM,gDAKjBC,QAAQC,MAAM,0BAAd,MALiB,yDAAH,qDASlBJ,GACD,GAAE,CAACN,IAEAG,EAAQQ,OAAS,GACZ,SAACb,EAAD,iDAIP,yBACGK,EAAQS,KAAI,SAAAC,GAAM,OACjB,4BACE,0BACE,mCADF,IACkBA,EAAOC,WAEzB,0BACE,oCADF,IACmBD,EAAOE,YAE1B,oBAPQF,EAAOlB,GADA,KAaxB,C","sources":["api/fetchApi.jsx","components/Review/Reviews.styled.jsx","components/Review/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0ad512fb225eecaea999568cb90b6aa0';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {};\naxios.defaults.params['api_key'] = API_KEY;\naxios.defaults.params['language'] = 'en-US';\n\nexport const fetchTrendingApi = async () => {\n  const { data } = await axios.get(`/trending/movie/day`, {\n    params: { page: 1 },\n  });\n  return data;\n};\n\nexport const fetchSearchApi = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: { query, include_adult: false, page: 1 },\n  });\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieGenres = async () => {\n  const { data } = await axios.get(`/genre/movie/list`);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: { page: 1 },\n  });\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const ReviewsError = styled('p')`\n  padding: px;\n  text-align: center;\n  font-size: 30px;\n`;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchReview } from 'api/fetchApi';\nimport { ReviewsError } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { results } = await fetchReview(Number(movieId));\n        setReviews(results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  if (reviews.length < 1) {\n    return <ReviewsError>Sorry, we don't have any reviews!</ReviewsError>;\n  }\n\n  return (\n    <div>\n      {reviews.map(review => (\n        <div key={review.id}>\n          <p>\n            <b>Author:</b> {review.author}\n          </p>\n          <p>\n            <b>Content:</b> {review.content}\n          </p>\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["axios","fetchTrendingApi","params","page","data","fetchSearchApi","query","include_adult","fetchMovieDetails","id","fetchCast","fetchReview","ReviewsError","styled","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","Number","results","console","error","length","map","review","author","content"],"sourceRoot":""}